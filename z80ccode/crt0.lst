ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next), page 1.
Hexadecimal [16-Bits]



                              1 		;; crt0.s
                              2         ;; 
                              3         ;; zx spectrum 48K ram startup code
                              4 		;;
                              5         ;; MIT License (see: LICENSE)
                              6         ;; Copyright (C) 2021 Tomaz Stih
                              7         ;;
                              8 		;; 2021-06-16   tstih
                              9 		.module crt0
                             10         
                             11         .area   _CODE
                             12 
   0000 ED 73 00 00   [20]   13         ld      (#__store_sp),sp        ; store current stack pointer
   0004 31 02 08      [10]   14         ld      sp,#__stack             ; load new stack pointer
                             15 
                             16         ;; store all regs
   0007 F5            [11]   17         push    af
   0008 C5            [11]   18         push    bc
   0009 D5            [11]   19         push    de
   000A E5            [11]   20         push    hl
   000B DD E5         [15]   21         push    ix
   000D FD E5         [15]   22         push    iy
   000F 08            [ 4]   23         ex      af, af'
   0010 F5            [11]   24         push    af
   0011 D9            [ 4]   25         exx
   0012 C5            [11]   26         push    bc
   0013 D5            [11]   27         push    de
   0014 E5            [11]   28         push    hl
                             29 
   0015 CD 00 00      [17]   30         call    gsinit                  ; call SDCC init code
                             31 
                             32         ;; call C main function
   0018 CD 00 00      [17]   33         call    _main			
                             34 
                             35         ;; restore all regs
   001B E1            [10]   36         pop     hl
   001C D1            [10]   37         pop     de
   001D C1            [10]   38         pop     bc
   001E F1            [10]   39         pop     af
   001F D9            [ 4]   40         exx
   0020 08            [ 4]   41         ex      af,af'
   0021 FD E1         [14]   42         pop     iy
   0023 DD E1         [14]   43         pop     ix
   0025 E1            [10]   44         pop     hl
   0026 D1            [10]   45         pop     de
   0027 C1            [10]   46         pop     bc
   0028 F1            [10]   47         pop     af
                             48 
   0029 ED 7B 00 00   [20]   49         ld      sp,(#__store_sp)        ; restore original stack pointer
                             50 
                             51         ;; return to wherever you were called from
   002D C9            [10]   52         ret	
                             53 
                             54         ;;	(linker documentation:) where specific ordering is desired - 
                             55         ;;	the first linker input file should have the area definitions 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next), page 2.
Hexadecimal [16-Bits]



                             56         ;;	in the desired order
                             57         .area   _GSINIT
                             58         .area   _GSFINAL	
                             59         .area   _HOME
                             60         .area   _INITIALIZER
                             61         .area   _INITFINAL
                             62         .area   _INITIALIZED
                             63         .area   _DATA
                             64         .area   _BSS
                             65         .area   _HEAP
                             66 
                             67         ;;	this area contains data initialization code.
                             68         .area _GSINIT
   0000                      69 gsinit:	
                             70         ;; initialize vars from initializer
   0000 11 00 00      [10]   71         ld      de, #s__INITIALIZED
   0003 21 00 00      [10]   72         ld      hl, #s__INITIALIZER
   0006 01 00 00      [10]   73         ld      bc, #l__INITIALIZER
   0009 78            [ 4]   74         ld      a, b
   000A B1            [ 4]   75         or      a, c
   000B 28 02         [12]   76         jr      z, gsinit_none
   000D ED B0         [21]   77         ldir
   000F                      78 gsinit_none:
                             79         .area _GSFINAL
   0000 C9            [10]   80         ret
                             81 
                             82         .area _DATA
                             83         .area _BSS
                             84         ;; this is where we store the stack pointer
   0000                      85 __store_sp:	
   0000 01 00                86         .word 1
                             87         ;; 2048 bytes of operating system stack
   0002                      88         .ds	2048
   0802                      89 __stack::
                             90         .area _HEAP
   0000                      91 __heap::
